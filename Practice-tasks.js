// HW 03

// Створіть клас Hamburger
// В Класі добавте в статік обєкт налаштувань по добавкам (не по розміру), щоб була можливість використовувати їх як у прикладі: Hamburger.stuffing.STUFFING_SALAD
// Добавте слідуючі методи:
// addSize - Добавляє розмір гамбургера
// addTopping(Hamburger.stuffing.STUFFING_SALAD, ...) - Добавляє добавку до гамбургера. Можна добавити декілька добавок при умові, що вони валідні
// removeTopping(Hamburger.stuffing.STUFFING_SALAD, ...) - Видалити добавку, при умові, що вона раніше була добавлена.
// getStuffing - геттер, має повернути this.toppings = [....]
// calculatePrice() - взнати вартість замовлення
// calculateCalories() - взнати калорійність гамбургера
// showError() - метод, який може показувати 2 помилки - якщо передали невірний розмір або начинка не існує (При видалені або додаванні)
// Добавте в логіку кода розрахунок варстості замовлення в залежності від розміру гамбургера та добавлених начинок.
// Дані в формі мають рендеритись динамічно (уявіть, що вони приходять з бекенду, тому кількість начинок може мінятьсь. Відповідно, мають змінюватись поля в формі по даним начинкам)
// Форма має бути інтерактивною, тобто - при виборі кожного пункту - інформація добавляється в блок "Інфо". Після заповнення усіх полів - сабмітимо форму і отримуємо підтвердження замовлення з виводом загальної інформації: вартість замовлення та що було обрано.

https://www.youtube.com/watch?v=FdJXDWD5r4w


// const DB = {
//   stuffing: {
//     STUFFING_SALAD: {
//       type: "STUFFING_SALAD",
//       price: 300,
//       ccal: 200,
//     },
//     STUFFING_POTATO: {
//       type: "STUFFING_POTATO",
//       price: 400,
//       ccal: 100,
//     },
//     TOPPING_MAYO: {
//       type: "TOPPING_MAYO",
//       price: 300,
//       ccal: 400,
//     },
//     TOPPING_SPICE: {
//       type: "TOPPING_SPICE",
//       price: 500,
//       ccal: 700,
//     },
//   },

//   sizes: {
//     S: 200,
//     L: 300,
//     M: 400,
//   },
// };
